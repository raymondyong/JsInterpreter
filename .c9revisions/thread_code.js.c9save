{"ts":1354212913219,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n\n\n\n\nthread.on('giveMeAggregation',\n          function(javascript) {\n                vm.runInNewContext(javascript, sandbox);  // appears to be a blocking call, okay as long as the code within it is non-blocking.\n            });"]],"start1":0,"start2":0,"length1":0,"length2":228}]],"length":228}
{"contributors":[],"silentsave":false,"ts":1354212970932,"patch":[[{"diffs":[[0,"ript) {\n"],[1,"                var sandbox = {};\n"],[0,"        "]],"start1":61,"start2":61,"length1":16,"length2":50}]],"length":262,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354214423456,"patch":[[{"diffs":[[0,"\n"],[-1,"\n\n"],[1,"var vm = require('vm');"],[0,"\n\nthread"]],"start1":0,"start2":0,"length1":11,"length2":32},{"diffs":[[0,"ript"],[-1,") {\n                var sandbox = {};\n                vm.runInNewContext(javascript, sandbox);  // appears to be a blocking call, okay as long as the code within it is non-blocking."],[1,", response) {    // response is accessible in the javascript text.\n                var sandbox = {};\n                \n                // run client's javascript in a vm context.\n                // runInNewContext() is a blocking call, so pray that ad-hoc code in javascript doesn't block.\n                vm.runInNewContext(javascript, sandbox);  "],[0,"\n   "]],"start1":82,"start2":82,"length1":189,"length2":355}]],"length":449,"saved":false}
{"ts":1354214744815,"patch":[[{"diffs":[[0,"unction("],[1,"response, "],[0,"javascri"]],"start1":68,"start2":68,"length1":16,"length2":26},{"diffs":[[0,"script, "],[-1,"resp"],[1,"c"],[0,"ons"],[1,"ol"],[0,"e) {    "]],"start1":90,"start2":90,"length1":23,"length2":22},{"diffs":[[0,"cript text.\n"],[1,"                console.log('  - thread is running' + this.id);\n"],[0,"            "]],"start1":150,"start2":150,"length1":24,"length2":88}]],"length":522,"saved":false}
