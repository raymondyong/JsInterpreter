{"ts":1354212913219,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n\n\n\n\nthread.on('giveMeAggregation',\n          function(javascript) {\n                vm.runInNewContext(javascript, sandbox);  // appears to be a blocking call, okay as long as the code within it is non-blocking.\n            });"]],"start1":0,"start2":0,"length1":0,"length2":228}]],"length":228}
{"contributors":[],"silentsave":false,"ts":1354212970932,"patch":[[{"diffs":[[0,"ript) {\n"],[1,"                var sandbox = {};\n"],[0,"        "]],"start1":61,"start2":61,"length1":16,"length2":50}]],"length":262,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354214423456,"patch":[[{"diffs":[[0,"\n"],[-1,"\n\n"],[1,"var vm = require('vm');"],[0,"\n\nthread"]],"start1":0,"start2":0,"length1":11,"length2":32},{"diffs":[[0,"ript"],[-1,") {\n                var sandbox = {};\n                vm.runInNewContext(javascript, sandbox);  // appears to be a blocking call, okay as long as the code within it is non-blocking."],[1,", response) {    // response is accessible in the javascript text.\n                var sandbox = {};\n                \n                // run client's javascript in a vm context.\n                // runInNewContext() is a blocking call, so pray that ad-hoc code in javascript doesn't block.\n                vm.runInNewContext(javascript, sandbox);  "],[0,"\n   "]],"start1":82,"start2":82,"length1":189,"length2":355}]],"length":449,"saved":false}
{"ts":1354214744815,"patch":[[{"diffs":[[0,"unction("],[1,"response, "],[0,"javascri"]],"start1":68,"start2":68,"length1":16,"length2":26},{"diffs":[[0,"script, "],[-1,"resp"],[1,"c"],[0,"ons"],[1,"ol"],[0,"e) {    "]],"start1":90,"start2":90,"length1":23,"length2":22},{"diffs":[[0,"cript text.\n"],[1,"                console.log('  - thread is running' + this.id);\n"],[0,"            "]],"start1":150,"start2":150,"length1":24,"length2":88}]],"length":522,"saved":false}
{"ts":1354215740650,"patch":[[{"diffs":[[0,"e('vm');"],[1,"\nvar https = require('https');\nvar red = require('./red');"],[0,"\n\nthread"]],"start1":16,"start2":16,"length1":16,"length2":74},{"diffs":[[0,"dbox = {"],[1,"\n                    query : function (handler_name, show, querystring, callback){\n                                var handler = red.configurations.resource_mappings.handlers[handler_name];\n                                var host = red.configurations.resource_mappings.hosts[handler.host];\n                                var options = {\n                                        hostname: host.address,\n                                        port: 443,\n                                        path: handler.path + (show ? '/' + show : '') + '?' + (querystring ? querystring + '&' : '') + 'api_token=' + host.token,\n                                        rejectUnauthorized: false,\n                                        requestCert: true,\n                                        agent: false                            \n                                };\n                                https.get(options,\n                                        function(api_res)\n                                        {\n                                            var data = '';\n                                            api_res.setEncoding('utf8');\n                                            api_res.addListener(\n                                                'data', \n                                                function(chunk){\n                                                    data += chunk.toString('utf8');\n                                                });\n                                    \n                                            api_res.addListener(\n                                                        'end', \n                                                        function() {\n                                                            callback(data, response);\n                                                });\n                                        });\n                            }\n                "],[0,"};\n     "]],"start1":307,"start2":307,"length1":16,"length2":1943},{"diffs":[[0,"box);  \n"],[-1,""],[0,"        "]],"start1":2484,"start2":2484,"length1":16,"length2":16},{"diffs":[[0,");  \n            });"],[1,"\n            \n            "]],"start1":2487,"start2":2487,"length1":20,"length2":46}]],"length":2533,"saved":false}
{"ts":1354217885058,"patch":[[{"diffs":[[0,"ion("],[-1,"response, "],[0,"java"]],"start1":130,"start2":130,"length1":18,"length2":8},{"diffs":[[0,"    "],[-1,"// response is accessible in the javascript text.\n                console.log('  - thread is running' + this.id);\n"],[1,"\n                var sandbox = {\n    "],[0,"    "]],"start1":156,"start2":156,"length1":122,"length2":45},{"diffs":[[0,"            "],[-1,"var sandbox = {"],[1,"result: '',"],[0,"\n           "]],"start1":201,"start2":201,"length1":39,"length2":35},{"diffs":[[0,"   query"],[-1," "],[0,": functi"]],"start1":242,"start2":242,"length1":17,"length2":16},{"diffs":[[0,"data"],[-1,", response"],[0,");\n "]],"start1":1991,"start2":1991,"length1":18,"length2":8}]],"length":2431,"saved":false}
